{"version":3,"sources":["utf-8-redirect.js","script.js"],"names":["redirect","isoCodes","navigator","geolocation","getCurrentPosition","data","fetch","coords","latitude","longitude","then","response","json","countryGeo","results","address_components","short_name","iso","language","substring","isoMatch","find","element","isoCountryMatch","undefined","document","querySelector","innerHTML","replace","value","console","log"],"mappings":";AAAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAAA,IAAMA,EAAW,WACTC,IAAAA,EAAW,CACX,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAoCJC,UAAUC,YAAYC,mBAjCR,SAACC,GA0BPC,MAAkED,4DAAAA,OAAAA,EAAKE,OAAOC,SAAYH,KAAAA,OAAAA,EAAKE,OAAOE,UAAtG,iDACCC,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAAQF,KA1BzB,SAACL,GACLQ,IAAAA,EAAaR,EAAKS,QAAQ,GAAGC,mBAAmB,GAAGC,WACnDC,EAAMf,UAAUgB,SAASC,UAAU,EAAG,GAAK,IAAMN,EACjDO,EAAWnB,EAASoB,KAAK,SAAAC,GAAWA,OAAAA,IAAYL,IAChDM,EAAkBtB,EAASoB,KAAK,SAAAC,GAAWA,OAAAA,EAAQH,UAAU,EAAG,KAAON,SAE5DW,IAAbJ,GAEAK,SAASC,cAAc,aAAaC,UAAgBP,IAAAA,OAAAA,EAApD,KACAK,SAASC,cAAc,YAAYC,UAAY,yCAEpBH,IAApBD,GAEPE,SAASC,cAAc,aAAaC,UAAgBJ,IAAAA,OAAAA,EAAgBK,QAAQ,IAAK,KAAjF,KACAH,SAASC,cAAc,YAAYC,UAAY,oDAG/CF,SAASC,cAAc,aAAaC,UAAgBzB,IAAAA,OAAAA,UAAUgB,SAA9D,KACAO,SAASC,cAAc,YAAYC,UAAY,0CAEnDF,SAASC,cAAc,YAAYG,MAAQhB,EAC3CY,SAASC,cAAc,aAAaG,MAAQ3B,UAAUgB,SAASC,UAAU,EAAG,MAQxE,SAACd,GACTyB,QAAQC,IAAI1B,MAlKpB,QAAA,SAAA;;ACEA,aAFA,IAAA,EAAA,QAAA,qBAEA,EAAA,EAAA","file":"script.32b7641e.js","sourceRoot":"..\\..\\..\\UTF-8-ISO-locale-redirect-recommender","sourcesContent":["const redirect = () => {\r\n    var isoCodes = [\r\n        'af_ZA',\r\n        'ar_AE',\r\n        'ar_BH',\r\n        'ar_DZ',\r\n        'ar_EG',\r\n        'ar_IQ',\r\n        'ar_JO',\r\n        'ar_KW',\r\n        'ar_LY',\r\n        'ar_MA',\r\n        'ar_OM',\r\n        'ar_QA',\r\n        'ar_SA',\r\n        'ar_TN',\r\n        'ar_YE',\r\n        'as_IN',\r\n        'az_AZ',\r\n        'be_BY',\r\n        'bg_BG',\r\n        'bn_IN',\r\n        'bs_BA',\r\n        'ca_ES',\r\n        'cs_CZ',\r\n        'CZ.UT',\r\n        'da_DK',\r\n        'de_AT',\r\n        'de_BE',\r\n        'de_CH',\r\n        'de_DE',\r\n        'de_LI',\r\n        'de_LU',\r\n        'el_CY',\r\n        'el_GR',\r\n        'en_AU',\r\n        'en_BW',\r\n        'en_CA',\r\n        'en_GB',\r\n        'en_HK',\r\n        'en_IE',\r\n        'en_IN',\r\n        'en_MT',\r\n        'en_NZ',\r\n        'en_PH',\r\n        'en_SG',\r\n        'en_US',\r\n        'en_ZW',\r\n        'es_AR',\r\n        'es_BO',\r\n        'es_CL',\r\n        'es_CO',\r\n        'es_CR',\r\n        'es_DO',\r\n        'es_EC',\r\n        'es_ES',\r\n        'es_GT',\r\n        'es_HN',\r\n        'es_MX',\r\n        'es_NI',\r\n        'es_PA',\r\n        'es_PE',\r\n        'es_PR',\r\n        'es_PY',\r\n        'es_SV',\r\n        'es_US',\r\n        'es_UY',\r\n        'es_VE',\r\n        'et_EE',\r\n        'fi_FI',\r\n        'fr_BE',\r\n        'fr_CA',\r\n        'fr_CH',\r\n        'fr_FR',\r\n        'fr_LU',\r\n        'gu_IN',\r\n        'he_IL',\r\n        'hi_IN',\r\n        'hr_HR',\r\n        'hu_HU',\r\n        'hy_AM',\r\n        'id_ID',\r\n        'is_IS',\r\n        'it_CH',\r\n        'it_IT',\r\n        'ja_JP',\r\n        'ka_GE',\r\n        'kk_KZ',\r\n        'kn_IN',\r\n        'ko_KR',\r\n        'ks_IN',\r\n        'ku_TR',\r\n        'ky_KG',\r\n        'lt_LT',\r\n        'lv_LV',\r\n        'mk_MK',\r\n        'ml_IN',\r\n        'mr_IN',\r\n        'ms_MY',\r\n        'mt_MT',\r\n        'nb_NO',\r\n        'nl_BE',\r\n        'nl_NL',\r\n        'nn_NO',\r\n        'or_IN',\r\n        'pa_IN',\r\n        'pl_PL',\r\n        'pt_BR',\r\n        'pt_PT',\r\n        'ro_RO',\r\n        'ru_RU',\r\n        'ru_UA',\r\n        'sa_IN',\r\n        'sk_SK',\r\n        'sl_SI',\r\n        'sq_AL',\r\n        'sr_ME',\r\n        'sr_RS',\r\n        'sv_SE',\r\n        'ta_IN',\r\n        'te_IN',\r\n        'th_TH',\r\n        'tr_TR',\r\n        'uk_UA',\r\n        'vi_VN',\r\n        'zh_CN',\r\n        'zh_HK',\r\n        'zh_SG',\r\n        'zh_TW'\r\n    ];\r\n\r\n    var success = (data) => {\r\n        var display = (data) => {\r\n            const countryGeo = data.results[0].address_components[5].short_name;            \r\n            const iso = navigator.language.substring(0, 2) + '-' + countryGeo;\r\n            const isoMatch = isoCodes.find(element => element === iso);\r\n            const isoCountryMatch = isoCodes.find(element => element.substring(3, 5) === countryGeo);\r\n            \r\n            if (isoMatch !== undefined) {\r\n                //redirect using lang+country from browser + google geolocation\r\n                document.querySelector('.redirect').innerHTML = `/${isoMatch}/`;\r\n                document.querySelector('.message').innerHTML = \" Country and Language detected! \";\r\n                \r\n            } else if (isoCountryMatch !== undefined) {\r\n                //redirect using only Country\r\n                document.querySelector('.redirect').innerHTML = `/${isoCountryMatch.replace('_', '-')}/`;\r\n                document.querySelector('.message').innerHTML = \" Redirecting to country, with default language!\";\r\n            } else {\r\n                // redirect using browser pure settigns\r\n                document.querySelector('.redirect').innerHTML = `/${navigator.language}/`;\r\n                document.querySelector('.message').innerHTML = \" No matches found. Attemting redirect!\";\r\n            }\r\n            document.querySelector('.country').value = countryGeo;\r\n            document.querySelector('.language').value = navigator.language.substring(0, 2);\r\n        }\r\n\r\n        var googleapis = \r\n            fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${data.coords.latitude},${data.coords.longitude}&key=AIzaSyASD6wHSP8cAK6yU9jLgAuUEoV-iP-bK98`)\r\n            .then(response => response.json()).then(display);\r\n    }\r\n\r\n    var error = (data) => {\r\n        console.log(data)\r\n    }\r\n    navigator.geolocation.getCurrentPosition(success, error);\r\n}\r\n\r\nexport {redirect};","import { redirect } from './utf-8-redirect';\r\n\r\nredirect();"]}